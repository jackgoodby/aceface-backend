AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  aceface-backend
  
  Sample SAM Template for aceface-backend

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Runtime: provided.al2
    Architectures:
      - x86_64
    Timeout: 5
    MemorySize: 128
    VpcConfig:
      SecurityGroupIds:
        - sg-010dd40dda6133610
      SubnetIds:
        - subnet-0ece193c2f22c73d6
        - subnet-046b068de6141e571
    Environment: # More info about Env Vars: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#environment-object
      Variables:
        DB_HOST: !Ref DBHOST
        DB_PORT: !Ref DBPORT
        DB_USER: !Ref DBUSER
        DB_PASS: !Ref DBPASS
        DB_NAME: !Ref DBNAME

Parameters:
  DBHOST:
    Type: String
    Default: 'host.docker.internal'
  DBPORT:
    Type: String
    Default: '5432'
  DBUSER:
    Type: String
    Default: 'aceface'
  DBPASS:
    Type: String
    Default: 'aceface'
  DBNAME:
    Type: String
    Default: 'postgres'

Resources:
  AceFaceApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: Prod
  #      CacheClusterEnabled: true
  #      CacheClusterSize: '0.5'
  #      MethodSettings:
  #        - ResourcePath: /
  #          HttpMethod: GET
  #          CachingEnabled: true
  #          CacheTtlInSeconds: 300
  #      Tags:
  #        CacheMethods: All
  GetCompetitionsFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: src/lambda/getCompetitions/
      Handler: bootstrap
      Role: arn:aws:iam::196325156910:role/aceface-lambda-rds-full
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /competitions
            Method: GET
            RestApiId:
              Ref: AceFaceApiGatewayApi

  GetCompetitionFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: src/lambda/getCompetition/
      Handler: bootstrap
      Role: arn:aws:iam::196325156910:role/aceface-lambda-rds-full
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /competitions/{uuid}
            Method: GET
            RestApiId:
              Ref: AceFaceApiGatewayApi

  GetCourtsFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: src/lambda/getCourts/
      Handler: bootstrap
      Role: arn:aws:iam::196325156910:role/aceface-lambda-rds-full
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /courts
            Method: GET
            RestApiId:
              Ref: AceFaceApiGatewayApi

  GetCourtFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: src/lambda/getCourt/
      Handler: bootstrap
      Role: arn:aws:iam::196325156910:role/aceface-lambda-rds-full
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /courts/{uuid}
            Method: GET
            RestApiId:
              Ref: AceFaceApiGatewayApi

  GetMatchesFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: src/lambda/getMatches/
      Handler: bootstrap
      Role: arn:aws:iam::196325156910:role/aceface-lambda-rds-full
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /matches
            Method: GET
            RestApiId:
              Ref: AceFaceApiGatewayApi

  GetMatchFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: src/lambda/getMatch/
      Handler: bootstrap
      Role: arn:aws:iam::196325156910:role/aceface-lambda-rds-full
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /matches/{uuid}
            Method: GET
            RestApiId:
              Ref: AceFaceApiGatewayApi

  GetMatchScoreFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: src/lambda/getMatchScore/
      Handler: bootstrap
      Role: arn:aws:iam::196325156910:role/aceface-lambda-rds-full
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /matches/{uuid}/score
            Method: GET
            RestApiId:
              Ref: AceFaceApiGatewayApi

  PutMatchScoreFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: src/lambda/putMatchScore/
      Handler: bootstrap
      Role: arn:aws:iam::196325156910:role/aceface-lambda-rds-full
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /matches/{uuid}/score
            Method: PUT
            RestApiId:
              Ref: AceFaceApiGatewayApi

  GetMembersFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: src/lambda/getMembers/
      Handler: bootstrap
      Role: arn:aws:iam::196325156910:role/aceface-lambda-rds-full
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /members
            Method: GET
            RestApiId:
              Ref: AceFaceApiGatewayApi

  GetMemberFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: go1.x
    Properties:
      CodeUri: src/lambda/getMember/
      Handler: bootstrap
      Role: arn:aws:iam::196325156910:role/aceface-lambda-rds-full
      Events:
        ApiEvent:
          Type: Api
          Properties:
            Path: /members/{uuid}
            Method: GET
            RestApiId:
              Ref: AceFaceApiGatewayApi

#Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
#  GetMembersAPI:
#    Description: "API Gateway endpoint URL for Prod environment for getMembers Function"
#    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/members/"
#  GetMembersFunction:
#    Description: "First Lambda Function ARN"
#    Value: !GetAtt GetMembersFunction.Arn
#  GetMembersFunctionIamRole:
#    Description: "Implicit IAM Role created for getMembers function"
#    Value: !GetAtt GetMembersFunctionRole.Arn
